name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Build with Maven
        working-directory: ../../pom.xml  # Specify the directory with the pom.xml file
        run: mvn clean install -DskipTests

      - name: Run Tests
        working-directory: ./  # Specify the directory with the pom.xml file
        run: mvn test

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Deploy to server
        env:
          USER_NAME: ${{ secrets.USER_NAME }}
          HOST: ${{ secrets.HOST }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: |
          echo "Starting deployment..."
          sshpass -p $PASSWORD ssh -o StrictHostKeyChecking=no $USER_NAME@$HOST << 'EOF'
            cd /path/to/deployment/directory
            git pull origin main
            mvn clean install
            java -jar target/your-spring-boot-app.jar &
          EOF
